{"version":3,"sources":["switch.js","App.js","index.js"],"names":["noop","Switch","on","className","ariaLabel","onClick","props","btnClassName","filter","Boolean","join","aria-label","style","display","type","checked","onChange","actionTypes","toggleReducer","state","action","Error","Toggle","React","useState","clicksSinceReset","setClicksSinceReset","tooManyClicks","reducer","useReducer","dispatch","toggle","setOn","setOff","useToggle","changes","count","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGMA,G,MAAO,cA8BEC,MA5Bf,YAMI,IALFC,EAKC,EALDA,GAKC,IAJDC,iBAIC,MAJW,GAIX,EAHaC,EAGb,EAHD,cACAC,EAEC,EAFDA,QACGC,EACF,yDACKC,EAAe,CACnBJ,EACA,aACAD,EAAK,gBAAkB,kBACvBM,OAAOC,SAASC,KAAK,KAEvB,OACE,2BAAOC,aAAwB,SAAZP,EAAsBQ,MAAO,CAACC,QAAS,UACxD,2BACEV,UAAU,eACVW,KAAK,WACLC,QAASb,EACTc,SAAUhB,EACVK,QAASA,IAEX,wCAAMF,UAAWI,GAAkBD,MCxBnCW,EACI,SADJA,EAEA,KAFAA,EAGC,MAGP,SAASC,EAAcC,EAAOC,GAC5B,OAAQA,EAAON,MACb,KAAKG,EACH,OAAO,2BAAIE,GAAX,IAAkBjB,IAAKiB,EAAMjB,KAG/B,KAAKe,EACH,MAAO,CAACf,IAAI,GAGd,KAAKe,EACH,MAAO,CAACf,IAAI,GAGd,QACE,MAAM,IAAImB,MAAJ,wCAA2CD,EAAON,QAc9D,SAASQ,IAAU,IAAD,EACgCC,IAAMC,SAAS,GAD/C,mBACTC,EADS,KACSC,EADT,KAEVC,EAAgBF,GAAoB,EAF1B,EAVlB,WAAoD,IAAD,yDAAJ,GAAI,IAA/BG,eAA+B,MAArBV,EAAqB,IACxBK,IAAMM,WAAWD,EAAS,CAAC1B,IAAG,IADN,mBACzCA,EADyC,KACzCA,GAAK4B,EADoC,KAG3CC,EAAS,kBAAMD,EAAS,CAAChB,KAAMG,KAC/Be,EAAQ,kBAAMF,EAAS,CAAChB,KAAMG,KAC9BgB,EAAS,kBAAMH,EAAS,CAAChB,KAAMG,KAErC,MAAO,CAACf,KAAI6B,SAAQC,QAAOC,UAMSC,CAAU,CAE5CN,QAF4C,SAEpCT,EAAOC,GACb,IAAMe,EAAUjB,EAAcC,EAAOC,GAErC,OAAGO,GAAiBP,EAAON,OAASG,EAC3B,2BAAIkB,GAAX,IAAoBjC,GAAIiB,EAAMjB,KAEvBiC,KARNjC,EAHS,EAGTA,GAAI6B,EAHK,EAGLA,OAAQC,EAHH,EAGGA,MAAOC,EAHV,EAGUA,OAa1B,OACE,6BACE,4BAAQ5B,QAAS4B,GAAjB,UACA,4BAAQ5B,QAAS2B,GAAjB,SACA,kBAAC,EAAD,CAAQ9B,GAAIA,EAAIG,QAAS,WACvB0B,IACAL,GAAoB,SAAAU,GAAK,OAAIA,EAAQ,QAGrCT,EAAgB,4BAAQtB,QAAS,kBAAMqB,EAAoB,KAA3C,SAAgE,MASzEW,MAJf,WACE,OAAO,kBAACf,EAAD,OCjETgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2a88f5b9.chunk.js","sourcesContent":["import './switch.styles.css';\nimport React from 'react';\n\nconst noop = () => { };\n\nfunction Switch({\n  on,\n  className = '',\n  'aria-label': ariaLabel,\n  onClick,\n  ...props\n}) {\n  const btnClassName = [\n    className,\n    'toggle-btn',\n    on ? 'toggle-btn-on' : 'toggle-btn-off',\n  ].filter(Boolean).join(' ')\n\n  return (\n    <label aria-label={ariaLabel | 'Toggle'} style={{display: 'block'}}>\n      <input\n        className=\"toggle-input\"\n        type=\"checkbox\"\n        checked={on}\n        onChange={noop}\n        onClick={onClick}\n      />\n      <span className={btnClassName} {...props} />\n    </label>\n  )\n}\n\n\nexport default Switch;","import React from 'react';\nimport Switch from './switch';\n\nconst actionTypes = {\n  TOGGLE: 'TOGGLE',\n  ON: 'ON',\n  OFF: 'off'\n};\n\nfunction toggleReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.TOGGLE: {\n      return {...state, on: !state.on};\n    }\n\n    case actionTypes.ON: {\n      return {on: true}\n    }\n\n    case actionTypes.OFF: {\n      return {on: false}\n    }\n\n    default:\n      throw new Error(`Unhandled toggleReducer with: ${action.type}`);\n  }\n}\n\nfunction useToggle({reducer = toggleReducer} = {}) {\n  const [{on}, dispatch] = React.useReducer(reducer, {on:false});\n  //destructuring: on = false;\n  const toggle = () => dispatch({type: actionTypes.TOGGLE});\n  const setOn = () => dispatch({type: actionTypes.ON});\n  const setOff = () => dispatch({type: actionTypes.OFF});\n\n  return {on, toggle, setOn, setOff};\n}\n\nfunction Toggle() {\n  const [clicksSinceReset, setClicksSinceReset] = React.useState(0);\n  const tooManyClicks = clicksSinceReset >= 4;\n  const {on, toggle, setOn, setOff} = useToggle({\n    //reducer: function reducer() {}\n    reducer(state, action) {\n      const changes = toggleReducer(state, action);\n\n      if(tooManyClicks && action.type === actionTypes.TOGGLE) {\n        return {...changes, on: state.on};\n      } else {\n        return changes;\n      }\n    }\n  });\n\n  return (\n    <div>\n      <button onClick={setOff}>SetOff</button>\n      <button onClick={setOn}>SetOn</button>\n      <Switch on={on} onClick={() => {\n        toggle();\n        setClicksSinceReset(count => count + 1);\n      }}/>\n      {\n        tooManyClicks ? <button onClick={() => setClicksSinceReset(0)}>Reset</button> : null\n      }\n    </div>\n  )\n}\nfunction App() {\n  return <Toggle />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}